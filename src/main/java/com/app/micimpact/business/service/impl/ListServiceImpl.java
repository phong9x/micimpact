/*
 * Created on 9 12ì›” 2015 ( Time 17:43:36 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.app.micimpact.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.app.micimpact.bean.MIList;
import com.app.micimpact.bean.jpa.ListEntity;
import java.util.Date;
import com.app.micimpact.business.service.ListService;
import com.app.micimpact.business.service.mapping.ListServiceMapper;
import com.app.micimpact.data.repository.jpa.ListJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ListService
 */
@Component
@Transactional
public class ListServiceImpl implements ListService {

	@Resource
	private ListJpaRepository listJpaRepository;

	@Resource
	private ListServiceMapper listServiceMapper;
	
	@Override
	public MIList findById(Integer id) {
		ListEntity listEntity = listJpaRepository.findOne(id);
		return listServiceMapper.mapListEntityToList(listEntity);
	}

	@Override
	public List<MIList> findAll() {
		Iterable<ListEntity> entities = listJpaRepository.findAll();
		List<MIList> beans = new ArrayList<MIList>();
		for(ListEntity listEntity : entities) {
			beans.add(listServiceMapper.mapListEntityToList(listEntity));
		}
		return beans;
	}

	@Override
	public MIList save(MIList list) {
		return update(list) ;
	}

	@Override
	public MIList create(MIList list) {
		ListEntity listEntity;
		if(list.getId() != null){
			listEntity = listJpaRepository.findOne(list.getId());
			if( listEntity != null ) {
				throw new IllegalStateException("already.exists");
			}
		}
		listEntity = new ListEntity();
		listServiceMapper.mapListToListEntity(list, listEntity);
		ListEntity listEntitySaved = listJpaRepository.save(listEntity);
		return listServiceMapper.mapListEntityToList(listEntitySaved);
	}

	@Override
	public MIList update(MIList list) {
		ListEntity listEntity = listJpaRepository.findOne(list.getId());
		listServiceMapper.mapListToListEntity(list, listEntity);
		ListEntity listEntitySaved = listJpaRepository.save(listEntity);
		return listServiceMapper.mapListEntityToList(listEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		listJpaRepository.delete(id);
	}

	public ListJpaRepository getListJpaRepository() {
		return listJpaRepository;
	}

	public void setListJpaRepository(ListJpaRepository listJpaRepository) {
		this.listJpaRepository = listJpaRepository;
	}

	public ListServiceMapper getListServiceMapper() {
		return listServiceMapper;
	}

	public void setListServiceMapper(ListServiceMapper listServiceMapper) {
		this.listServiceMapper = listServiceMapper;
	}

}
