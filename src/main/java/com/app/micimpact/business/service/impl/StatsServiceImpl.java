/*
 * Created on 11 Apr 2016 ( Time 11:30:53 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.app.micimpact.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.app.micimpact.bean.Stats;
import com.app.micimpact.bean.jpa.StatsEntity;
import java.util.Date;
import com.app.micimpact.business.service.StatsService;
import com.app.micimpact.business.service.mapping.StatsServiceMapper;
import com.app.micimpact.data.repository.jpa.StatsJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of StatsService
 */
@Component
@Transactional
public class StatsServiceImpl implements StatsService {

	@Resource
	private StatsJpaRepository statsJpaRepository;

	@Resource
	private StatsServiceMapper statsServiceMapper;
	
	@Override
	public Stats findById(Integer id) {
		StatsEntity statsEntity = statsJpaRepository.findOne(id);
		return statsServiceMapper.mapStatsEntityToStats(statsEntity);
	}

	@Override
	public List<Stats> findAll() {
		Iterable<StatsEntity> entities = statsJpaRepository.findAll();
		List<Stats> beans = new ArrayList<Stats>();
		for(StatsEntity statsEntity : entities) {
			beans.add(statsServiceMapper.mapStatsEntityToStats(statsEntity));
		}
		return beans;
	}

	@Override
	public Stats save(Stats stats) {
		return update(stats) ;
	}

	@Override
	public Stats create(Stats stats) {
		StatsEntity statsEntity;
		if(stats.getId() != null){
			statsEntity = statsJpaRepository.findOne(stats.getId());
			if( statsEntity != null ) {
				throw new IllegalStateException("already.exists");
			}
		}
		statsEntity = new StatsEntity();
		statsServiceMapper.mapStatsToStatsEntity(stats, statsEntity);
		StatsEntity statsEntitySaved = statsJpaRepository.save(statsEntity);
		return statsServiceMapper.mapStatsEntityToStats(statsEntitySaved);
	}

	@Override
	public Stats update(Stats stats) {
		StatsEntity statsEntity = statsJpaRepository.findOne(stats.getId());
		statsServiceMapper.mapStatsToStatsEntity(stats, statsEntity);
		StatsEntity statsEntitySaved = statsJpaRepository.save(statsEntity);
		return statsServiceMapper.mapStatsEntityToStats(statsEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		statsJpaRepository.delete(id);
	}

	public StatsJpaRepository getStatsJpaRepository() {
		return statsJpaRepository;
	}

	public void setStatsJpaRepository(StatsJpaRepository statsJpaRepository) {
		this.statsJpaRepository = statsJpaRepository;
	}

	public StatsServiceMapper getStatsServiceMapper() {
		return statsServiceMapper;
	}

	public void setStatsServiceMapper(StatsServiceMapper statsServiceMapper) {
		this.statsServiceMapper = statsServiceMapper;
	}

	@Override
	public Integer total_statsCard(Integer type) {
		try {
			return statsJpaRepository.total_statsCard(type);
		} catch (Exception e) {
			return null;
		}
	}

	@Override
	public Integer statsCard_ByDate(Integer type, Date date) {
		try {
			return statsJpaRepository.statsCard_ByDate(type,date);
		} catch (Exception e) {
			return null;
		}
	}

	@Override
	public Integer statsCard_ByWeek(Integer type, Date start, Date end) {
		try {
			return statsJpaRepository.statsCard_ByWeek(type, start, end);
		} catch (Exception e) {
			return null;
		}
	}

	@Override
	public Integer statsCard_ByMonth(Integer type, Integer month, Integer year) {
		try {
			return statsJpaRepository.statsCard_ByMonth(type, month, year);
		} catch (Exception e) {
			return null;
		}
	}

}
