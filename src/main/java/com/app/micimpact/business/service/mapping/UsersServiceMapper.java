/*
 * Created on 17 Mar 2016 ( Time 10:35:16 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.app.micimpact.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.app.micimpact.bean.Users;
import com.app.micimpact.bean.jpa.UsersEntity;
import com.app.micimpact.bean.jpa.UserRolesEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class UsersServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public UsersServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'UsersEntity' to 'Users'
	 * @param usersEntity
	 */
	public Users mapUsersEntityToUsers(UsersEntity usersEntity) {
		if(usersEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Users users = map(usersEntity, Users.class);

		//--- Link mapping ( link to UserRoles )
		if(usersEntity.getUserRoles() != null) {
			users.setRoleId(usersEntity.getUserRoles().getId());
		}
		return users;
	}
	
	/**
	 * Mapping from 'Users' to 'UsersEntity'
	 * @param users
	 * @param usersEntity
	 */
	public void mapUsersToUsersEntity(Users users, UsersEntity usersEntity) {
		if(users == null) {
			return;
		}

		//--- Generic mapping 
		map(users, usersEntity);

		//--- Link mapping ( link : users )
		if( hasLinkToUserRoles(users) ) {
			UserRolesEntity userRoles1 = new UserRolesEntity();
			userRoles1.setId( users.getRoleId() );
			usersEntity.setUserRoles( userRoles1 );
		} else {
			usersEntity.setUserRoles( null );
		}

	}
	
	/**
	 * Verify that UserRoles id is valid.
	 * @param UserRoles UserRoles
	 * @return boolean
	 */
	private boolean hasLinkToUserRoles(Users users) {
		if(users.getRoleId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}