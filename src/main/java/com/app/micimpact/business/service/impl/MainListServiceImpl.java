/*
 * Created on 11 1ì›” 2016 ( Time 14:22:02 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.app.micimpact.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.app.micimpact.bean.MainList;
import com.app.micimpact.bean.jpa.MainListEntity;
import com.app.micimpact.business.service.MainListService;
import com.app.micimpact.business.service.mapping.MainListServiceMapper;
import com.app.micimpact.data.repository.jpa.MainListJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of MainListService
 */
@Component
@Transactional
public class MainListServiceImpl implements MainListService {

	@Resource
	private MainListJpaRepository mainListJpaRepository;

	@Resource
	private MainListServiceMapper mainListServiceMapper;
	
	@Override
	public MainList findById(Integer id) {
		MainListEntity mainListEntity = mainListJpaRepository.findOne(id);
		return mainListServiceMapper.mapMainListEntityToMainList(mainListEntity);
	}

	@Override
	public List<MainList> findAll() {
		Iterable<MainListEntity> entities = mainListJpaRepository.findAll();
		List<MainList> beans = new ArrayList<MainList>();
		for(MainListEntity mainListEntity : entities) {
			beans.add(mainListServiceMapper.mapMainListEntityToMainList(mainListEntity));
		}
		return beans;
	}

	@Override
	public MainList save(MainList mainList) {
		return update(mainList) ;
	}

	@Override
	public MainList create(MainList mainList) {
		MainListEntity mainListEntity;
		if(mainList.getId() != null){
			mainListEntity = mainListJpaRepository.findOne(mainList.getId());
			if( mainListEntity != null ) {
				throw new IllegalStateException("already.exists");
			}
		}
		mainListEntity = new MainListEntity();
		mainListServiceMapper.mapMainListToMainListEntity(mainList, mainListEntity);
		MainListEntity mainListEntitySaved = mainListJpaRepository.save(mainListEntity);
		return mainListServiceMapper.mapMainListEntityToMainList(mainListEntitySaved);
	}

	@Override
	public MainList update(MainList mainList) {
		MainListEntity mainListEntity = mainListJpaRepository.findOne(mainList.getId());
		mainListServiceMapper.mapMainListToMainListEntity(mainList, mainListEntity);
		MainListEntity mainListEntitySaved = mainListJpaRepository.save(mainListEntity);
		return mainListServiceMapper.mapMainListEntityToMainList(mainListEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		mainListJpaRepository.delete(id);
	}

	public MainListJpaRepository getMainListJpaRepository() {
		return mainListJpaRepository;
	}

	public void setMainListJpaRepository(MainListJpaRepository mainListJpaRepository) {
		this.mainListJpaRepository = mainListJpaRepository;
	}

	public MainListServiceMapper getMainListServiceMapper() {
		return mainListServiceMapper;
	}

	public void setMainListServiceMapper(MainListServiceMapper mainListServiceMapper) {
		this.mainListServiceMapper = mainListServiceMapper;
	}

	@Override
	public void createMainList(MainList mainList) {
		// TODO Auto-generated method stub
		mainListJpaRepository.createMainList(mainList.getCardId(), mainList.getOrder());
	}

	@Override
	public void updateMainListOrder(MainList mainList) {
		// TODO Auto-generated method stub
		mainListJpaRepository.updateMainListOrder(mainList.getOrder(), mainList.getId());
	}

	@Override
	public List<MainList> findAllByOrderByOrderAsc() {
		// TODO Auto-generated method stub
		return mainListJpaRepository.findAllByOrderByOrderAsc();
	}
}
