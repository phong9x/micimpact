/*
 * Created on 30 Mar 2016 ( Time 17:33:44 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.app.micimpact.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.app.micimpact.bean.Point;
import com.app.micimpact.bean.jpa.PointEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class PointServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public PointServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'PointEntity' to 'Point'
	 * @param pointEntity
	 */
	public Point mapPointEntityToPoint(PointEntity pointEntity) {
		if(pointEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Point point = map(pointEntity, Point.class);

		return point;
	}
	
	/**
	 * Mapping from 'Point' to 'PointEntity'
	 * @param point
	 * @param pointEntity
	 */
	public void mapPointToPointEntity(Point point, PointEntity pointEntity) {
		if(point == null) {
			return;
		}

		//--- Generic mapping 
		map(point, pointEntity);

	}
	
	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}