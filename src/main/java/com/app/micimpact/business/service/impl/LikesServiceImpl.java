/*
 * Created on 21 12ì›” 2015 ( Time 20:29:14 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.app.micimpact.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.app.micimpact.bean.Likes;
import com.app.micimpact.bean.jpa.LikesEntity;
import com.app.micimpact.business.service.LikesService;
import com.app.micimpact.business.service.mapping.LikesServiceMapper;
import com.app.micimpact.data.repository.jpa.LikesJpaRepository;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of LikesService
 */
@Component
@Transactional
public class LikesServiceImpl implements LikesService {

	@Resource
	private LikesJpaRepository likesJpaRepository;

	@Resource
	private LikesServiceMapper likesServiceMapper;
	
	@Override
	public Likes findById(Integer id) {
		LikesEntity likesEntity = likesJpaRepository.findOne(id);
		return likesServiceMapper.mapLikesEntityToLikes(likesEntity);
	}

	@Override
	public List<Likes> findAll() {
		Iterable<LikesEntity> entities = likesJpaRepository.findAll();
		List<Likes> beans = new ArrayList<Likes>();
		for(LikesEntity likesEntity : entities) {
			beans.add(likesServiceMapper.mapLikesEntityToLikes(likesEntity));
		}
		return beans;
	}

	@Override
	public Likes save(Likes likes) {
		return update(likes) ;
	}

	@Override
	public Likes create(Likes likes) {
		LikesEntity likesEntity;
		if(likes.getId() != null){
			likesEntity = likesJpaRepository.findOne(likes.getId());
			if( likesEntity != null ) {
				throw new IllegalStateException("already.exists");
			}
		}
		likesEntity = new LikesEntity();
		likesServiceMapper.mapLikesToLikesEntity(likes, likesEntity);
		LikesEntity likesEntitySaved = likesJpaRepository.save(likesEntity);
		return likesServiceMapper.mapLikesEntityToLikes(likesEntitySaved);
	}

	@Override
	public Likes update(Likes likes) {
		LikesEntity likesEntity = likesJpaRepository.findOne(likes.getId());
		likesServiceMapper.mapLikesToLikesEntity(likes, likesEntity);
		LikesEntity likesEntitySaved = likesJpaRepository.save(likesEntity);
		return likesServiceMapper.mapLikesEntityToLikes(likesEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		likesJpaRepository.delete(id);
	}

	public LikesJpaRepository getLikesJpaRepository() {
		return likesJpaRepository;
	}

	public void setLikesJpaRepository(LikesJpaRepository likesJpaRepository) {
		this.likesJpaRepository = likesJpaRepository;
	}

	public LikesServiceMapper getLikesServiceMapper() {
		return likesServiceMapper;
	}

	public void setLikesServiceMapper(LikesServiceMapper likesServiceMapper) {
		this.likesServiceMapper = likesServiceMapper;
	}

	public Likes findByUserIdAndCardId(Integer user_id, Integer card_id) {
		LikesEntity likesEntity = likesJpaRepository.findByUserIdAndCardId(user_id, card_id);
		return likesServiceMapper.mapLikesEntityToLikes(likesEntity);
	}


}
