/*
 * Created on 13 5�� 2015 ( Time 19:14:49 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.app.micimpact.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "resources"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="resources", catalog="micimpact" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ResourcesEntity.countAll", query="SELECT COUNT(x) FROM ResourcesEntity x" )
} )
public class ResourcesEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="domain", nullable=false, length=255)
    private String     domain       ;

    @Column(name="value", nullable=false, length=255)
    private String     value        ;

    @Column(name="logical_value", nullable=false, length=255)
    private String     logicalValue ;

    @Column(name="parent_id")
    private Integer    parentId     ;

    @Column(name="extra", length=255)
    private String     extra        ;

    @Column(name="locale_id", nullable=false)
    private Integer    localeId     ;

    @Column(name="locale", length=255)
    private String     locale       ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ResourcesEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : domain ( VARCHAR ) 
    public void setDomain( String domain ) {
        this.domain = domain;
    }
    public String getDomain() {
        return this.domain;
    }

    //--- DATABASE MAPPING : value ( VARCHAR ) 
    public void setValue( String value ) {
        this.value = value;
    }
    public String getValue() {
        return this.value;
    }

    //--- DATABASE MAPPING : logical_value ( VARCHAR ) 
    public void setLogicalValue( String logicalValue ) {
        this.logicalValue = logicalValue;
    }
    public String getLogicalValue() {
        return this.logicalValue;
    }

    //--- DATABASE MAPPING : parent_id ( INT ) 
    public void setParentId( Integer parentId ) {
        this.parentId = parentId;
    }
    public Integer getParentId() {
        return this.parentId;
    }

    //--- DATABASE MAPPING : extra ( VARCHAR ) 
    public void setExtra( String extra ) {
        this.extra = extra;
    }
    public String getExtra() {
        return this.extra;
    }

    //--- DATABASE MAPPING : locale_id ( INT ) 
    public void setLocaleId( Integer localeId ) {
        this.localeId = localeId;
    }
    public Integer getLocaleId() {
        return this.localeId;
    }

    //--- DATABASE MAPPING : locale ( VARCHAR ) 
    public void setLocale( String locale ) {
        this.locale = locale;
    }
    public String getLocale() {
        return this.locale;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(domain);
        sb.append("|");
        sb.append(value);
        sb.append("|");
        sb.append(logicalValue);
        sb.append("|");
        sb.append(parentId);
        sb.append("|");
        sb.append(extra);
        sb.append("|");
        sb.append(localeId);
        sb.append("|");
        sb.append(locale);
        return sb.toString(); 
    } 

}
