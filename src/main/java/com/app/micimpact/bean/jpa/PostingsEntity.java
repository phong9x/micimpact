/*
 * Created on 4 May 2015 ( Time 15:47:29 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.app.micimpact.bean.jpa;

import java.io.Serializable;
//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Persistent class for entity stored in table "postings"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="postings", catalog="micimpact" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PostingsEntity.countAll", query="SELECT COUNT(x) FROM PostingsEntity x" )
} )
public class PostingsEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="title",  length=512)
    private String     title        ;

    @Column(name="body", nullable=false)
    private String     body         ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", nullable=false)
    private Date       createdAt    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at", nullable=false)
    private Date       updatedAt    ;

    @Column(name="is_secret")
    private Boolean    isSecret     ;

    @Column(name="parent_id")
    private Integer    parentId     ;

	// "typeId" (column "type_id") is not defined by itself because used as FK in a link 
	// "userId" (column "user_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="type_id", referencedColumnName="id")
    private PostingTypesEntity postingTypes;

    @ManyToOne
    @JoinColumn(name="user_id", referencedColumnName="id")
    private UsersEntity users       ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PostingsEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : title ( VARCHAR ) 
    public void setTitle( String title ) {
        this.title = title;
    }
    public String getTitle() {
        return this.title;
    }

    //--- DATABASE MAPPING : body ( TEXT ) 
    public void setBody( String body ) {
        this.body = body;
    }
    public String getBody() {
        return this.body;
    }

    //--- DATABASE MAPPING : created_at ( TIMESTAMP ) 
    public void setCreatedAt( Date createdAt ) {
        this.createdAt = createdAt;
    }
    public Date getCreatedAt() {
        return this.createdAt;
    }

    //--- DATABASE MAPPING : updated_at ( TIMESTAMP ) 
    public void setUpdatedAt( Date updatedAt ) {
        this.updatedAt = updatedAt;
    }
    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    //--- DATABASE MAPPING : is_secret ( BIT ) 
    public void setIsSecret( Boolean isSecret ) {
        this.isSecret = isSecret;
    }
    public Boolean getIsSecret() {
        return this.isSecret;
    }

    //--- DATABASE MAPPING : parent_id ( INT ) 
    public void setParentId( Integer parentId ) {
        this.parentId = parentId;
    }
    public Integer getParentId() {
        return this.parentId;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setPostingTypes( PostingTypesEntity postingTypes ) {
        this.postingTypes = postingTypes;
    }
    public PostingTypesEntity getPostingTypes() {
        return this.postingTypes;
    }

    public void setUsers( UsersEntity users ) {
        this.users = users;
    }
    public UsersEntity getUsers() {
        return this.users;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(title);
        // attribute 'body' not usable (type = String Long Text)
        sb.append("|");
        sb.append(createdAt);
        sb.append("|");
        sb.append(updatedAt);
        sb.append("|");
        sb.append(isSecret);
        sb.append("|");
        sb.append(parentId);
        return sb.toString(); 
    } 

}
