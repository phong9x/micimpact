/*
 * Created on 30 Mar 2016 ( Time 16:05:52 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.app.micimpact.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Persistent class for entity stored in table "channel"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="channel", catalog="micimpact" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ChannelEntity.countAll", query="SELECT COUNT(x) FROM ChannelEntity x" )
} )
public class ChannelEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="title", length=300)
    private String     title        ;

    @Column(name="introduce", length=500)
    private String     introduce    ;

    @Column(name="likes")
    private Integer    likes        ;

    @Column(name="favorite")
    private Integer    favorite     ;

    @Column(name="is_show")
    private Integer    isShow       ;

    @Column(name="is_liked")
    private Integer    isLiked      ;

    @Column(name="is_favorited")
    private Integer    isFavorited  ;

    @Column(name="type")
    private Integer    type         ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at")
    private Date       createdAt    ;

	// "userId" (column "user_id") is not defined by itself because used as FK in a link 
	// "cardsRecentId" (column "cards_recent_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    
    @ManyToOne
    @JoinColumn(name="user_id", referencedColumnName="id")
    private UsersEntity users       ;
    
    @ManyToOne
    @JoinColumn(name="cards_recent_id", referencedColumnName="id")
    private CardsEntity cards       ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ChannelEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : title ( VARCHAR ) 
    public void setTitle( String title ) {
        this.title = title;
    }
    public String getTitle() {
        return this.title;
    }

    //--- DATABASE MAPPING : introduce ( VARCHAR ) 
    public void setIntroduce( String introduce ) {
        this.introduce = introduce;
    }
    public String getIntroduce() {
        return this.introduce;
    }

    //--- DATABASE MAPPING : likes ( INT ) 
    public void setLikes( Integer likes ) {
        this.likes = likes;
    }
    public Integer getLikes() {
        return this.likes;
    }

    //--- DATABASE MAPPING : favorite ( INT ) 
    public void setFavorite( Integer favorite ) {
        this.favorite = favorite;
    }
    public Integer getFavorite() {
        return this.favorite;
    }

    //--- DATABASE MAPPING : is_show ( INT ) 
    public void setIsShow( Integer isShow ) {
        this.isShow = isShow;
    }
    public Integer getIsShow() {
        return this.isShow;
    }

    //--- DATABASE MAPPING : is_liked ( INT ) 
    public void setIsLiked( Integer isLiked ) {
        this.isLiked = isLiked;
    }
    public Integer getIsLiked() {
        return this.isLiked;
    }

    //--- DATABASE MAPPING : is_favorited ( INT ) 
    public void setIsFavorited( Integer isFavorited ) {
        this.isFavorited = isFavorited;
    }
    public Integer getIsFavorited() {
        return this.isFavorited;
    }

    //--- DATABASE MAPPING : type ( INT ) 
    public void setType( Integer type ) {
        this.type = type;
    }
    public Integer getType() {
        return this.type;
    }

    //--- DATABASE MAPPING : created_at ( TIMESTAMP ) 
    public void setCreatedAt( Date createdAt ) {
        this.createdAt = createdAt;
    }
    public Date getCreatedAt() {
        return this.createdAt;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUsers( UsersEntity users ) {
        this.users = users;
    }
    public UsersEntity getUsers() {
        return this.users;
    }

    public void setCards( CardsEntity cards ) {
        this.cards = cards;
    }
    public CardsEntity getCards() {
        return this.cards;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(title);
        sb.append("|");
        sb.append(introduce);
        sb.append("|");
        sb.append(likes);
        sb.append("|");
        sb.append(favorite);
        sb.append("|");
        sb.append(isShow);
        sb.append("|");
        sb.append(isLiked);
        sb.append("|");
        sb.append(isFavorited);
        sb.append("|");
        sb.append(type);
        sb.append("|");
        sb.append(createdAt);
        return sb.toString(); 
    } 

}
