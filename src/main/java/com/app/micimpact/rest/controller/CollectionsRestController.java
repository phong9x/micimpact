/*
 * Created on 9 12ì›” 2015 ( Time 16:26:40 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.app.micimpact.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.app.micimpact.bean.Collections;
import com.app.micimpact.business.service.CollectionsService;

/**
 * Spring MVC controller for 'Collections' management.
 */
@Controller
public class CollectionsRestController {

	@Resource
	private CollectionsService collectionsService;
	
	@RequestMapping( value="/items/collections",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Collections> findAllAsListItems() {
		List<Collections> list = collectionsService.findAll();
		return list;
	}
	
	@RequestMapping( value="/collections",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Collections> findAll() {
		return collectionsService.findAll();
	}

	@RequestMapping( value="/collections/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Collections findOne(@PathVariable("id") Integer id) {
		return collectionsService.findById(id);
	}
	
	@RequestMapping( value="/collections",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Collections create(@RequestBody Collections collections) {
		return collectionsService.create(collections);
	}

	@RequestMapping( value="/collections/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Collections update(@PathVariable("id") Integer id, @RequestBody Collections collections) {
		return collectionsService.update(collections);
	}

	@RequestMapping( value="/collections/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		collectionsService.delete(id);
	}
	
}
