<?xml version="1.0" encoding="UTF-8" ?>
<b:beans xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:oauth="http://www.springframework.org/schema/security/oauth"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd 
	http://www.springframework.org/schema/security/oauth 
	http://www.springframework.org/schema/security/spring-security-oauth.xsd 
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd">
	<context:component-scan base-package="com.app.micimpact." use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Service" type="annotation" />
		<context:include-filter expression="org.springframework.stereotype.Repository" type="annotation" />
	</context:component-scan>
	<security:http auto-config="true" use-expressions="true">
		<security:csrf disabled="true"/>
		<security:form-login login-page="/" 
							 username-parameter="user_id"
							 password-parameter="password"
							 login-processing-url="/j_spring_security_check" 
							 authentication-success-handler-ref="signinSuccessHandler"
							 authentication-failure-handler-ref="signinFailureHandler"
							 authentication-details-source-ref="customWebAuthenticationDetailsSource"
							 default-target-url="/check" 
							 always-use-default-target="false" />
							 
		<security:logout invalidate-session="true"
						 logout-success-url="/"
						 logout-url="/logout" />
		<security:access-denied-handler ref="accessFailureHandler" />
		<security:intercept-url pattern="/" access="permitAll"/>		
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/res/**" access="hasRole('ROLE_RESU')"/>
		<security:intercept-url pattern="/channel/**" access="authenticated()"/>
		
		
		<!-- for smart editor -->
		<security:headers>
			<security:frame-options policy="SAMEORIGIN" />
		</security:headers>
	</security:http>
	

	
	<beans:bean id="ajaxSessionTimeoutFilter" class="com.app.micimpact.web.common.AjaxSessionTimeoutFilter">
		<beans:property name="ajaxHeader" value="AJAX" />
	</beans:bean>
	
	<beans:bean id="customWebAuthenticationDetailsSource" class="com.app.micimpact.security.CustomWebAuthenticationDetailsSource" />
	<beans:bean id="signinSuccessHandler" class="com.app.micimpact.security.SigninSuccessHandler" />
	<beans:bean id="signinFailureHandler" class="com.app.micimpact.security.SigninFailureHandler">
		<beans:property name="defaultFailureUrl" value="/admin?error=true" />
	</beans:bean>
	
	<beans:bean id="accessFailureHandler" class="com.app.micimpact.security.AccessFailureHandler">
		<!-- // access-denied-page 페이지도 적용하고 싶다면 아래와 같이 추가하면 된다. -->
		<beans:property name="errorPage" value="/403" />
	</beans:bean>
	
	<beans:bean id="securityUserService" class="com.app.micimpact.security.SecurityUserService" />
	<beans:bean id="encoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse" value="username" />
	</beans:bean>
	
	<beans:bean id="customAuthenticationProvider" class="com.app.micimpact.security.CustomAuthenticationProvider" />
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="customAuthenticationProvider" />
		<authentication-provider user-service-ref="securityUserService">
			<password-encoder ref="encoder">
				<salt-source ref="saltSource" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>
	<beans:bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" id="passwordEncoder" />
</b:beans>
